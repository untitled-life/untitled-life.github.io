<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Flink | Hackx's Blog]]></title>
  <link href="http://untitled-life.github.io/blog/categories/flink/atom.xml" rel="self"/>
  <link href="http://untitled-life.github.io/"/>
  <updated>2019-03-09T14:59:00+08:00</updated>
  <id>http://untitled-life.github.io/</id>
  <author>
    <name><![CDATA[Mike Cao]]></name>
    <email><![CDATA[untitled2018life@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[5 Baby Steps to Develop a Flink Application]]></title>
    <link href="http://untitled-life.github.io/blog/2019/01/06/5-baby-steps-to-develop-a-flink-application/"/>
    <updated>2019-01-06T10:25:13+08:00</updated>
    <id>http://untitled-life.github.io/blog/2019/01/06/5-baby-steps-to-develop-a-flink-application</id>
    <content type="html"><![CDATA[<p>一个人固然寂寞，两个人孤灯下无言相对却可以更寂寞。 &ndash;龙应台 《目送》</p>

<!-- more -->


<p>Getting up and running with Flink is easy as ABC. In this post, we go over 5 “baby” steps to guide you through setting up your first running Flink application locally. We discuss the software requirements to get started and point out some training resources that will help you understand the functionality of the framework. We also show you how to bootstrap an application, if you prefer to start from scratch! This quick overview should enable you to spin up a Flink application in close to no time.</p>

<h2>Software requirements</h2>

<p>You can develop and execute Flink applications on Linux, Mac OS X and Windows. Because most of the developers in the community operate in Unix-based setups, this environment includes the richest tooling support. To get started, the only real requirement is to have a Java Development Kit (JDK) 8 (or higher) installed — regardless of whether you are going to use Java or Scala for development. Although it is not strictly required to develop Flink applications, we recommend that you also set up the following software on your machine:</p>

<ul>
<li>Apache Maven 3.x. Most examples in our introduction trainings assume Maven for build automation. Moreover, Flink provides Maven archetypes to bootstrap new Flink Maven projects.</li>
<li>an IDE for Java and/or Scala development. Especially if you are going for Scala, we recommend using IntelliJ due to its out-of-the-box support for Maven and easy-to-install Scala plugin. For Java, Eclipse or Netbeans will work just as well.</li>
</ul>


<h2>Training material to get you going</h2>

<p>If you prefer to start your own project from scratch, then feel free to skip to this and go directly to the next step. Otherwise, data Artisans provides a whole range of training exercises that will help you become familiar with how Flink operates and ease you over time into more complex topics such as time and state management. These exercises (and possible solutions) are available on GitHub, so you can easily clone the project and use Maven to build it:
<code>bash
git clone https://github.com/dataArtisans/flink-training-exercises.git
cd flink-training-exercises
mvn clean package
</code>
This should take a couple of minutes, depending on the speed of your connection — Maven will download all the required dependencies. If everything goes as expected and the build is successful, you are on the right track!</p>

<h2>Bootstrapping your own Flink project</h2>

<p>Getting started from an existing project is the easiest way to make your first steps in application development with Flink, sure. But what if you want to create your own project from scratch at some point? Flink provides Maven archetypes to generate Maven projects for both Java and Scala applications. To create a quickstart Java project as a basis for your Flink application, for instance, run the following command:</p>

<pre><code class="bash">mvn archetype:generate \
-DarchetypeGroupId=org.apache.flink \
-DarchetypeArtifactId=flink-quickstart-java \
-DarchetypeVersion=1.7.0
</code></pre>

<p>The command above generates a Maven project for Flink 1.7.0 containing two classes: StreamingJob and BatchJob; that respectively provide the basic skeletons for a streaming and batch Flink program. You can adapt the parameters to match your version and naming preferences! We recommend that you import the project into your IDE of choice to get your hands on developing a runnable example. In case you are struggling with inspiration, you can get some hints in the Flink documentation.</p>

<h2>Running and debugging your first Flink application</h2>

<p>Although Flink is a distributed data processing system, it is easier to get started in a local environment, using just your machine. In a typical setting, you would have the master (JobManager) and workers (TaskManagers) running as separate JVM processes on separate machines; but Flink also includes a mode that allows you to execute applications within the same JVM as a multi-threaded process. This mode allows you to easily develop, debug and execute your Flink application within an IDE pretty much like any other Java or Scala project. To start your application, just run the main() method as you would normally!</p>

<p><img src="/images/post/first_flink_application.png" alt="first_flink_application" /></p>

<h2>Monitoring your Flink application</h2>

<p>If you are wondering what is happening under the hood of your running application, you can easily make use of the web interface that is bundled up in Flink to visualize and monitor it. To enable the interface for your local development, you will need to add a new dependency to your POM file:</p>

<pre><code class="properties">&lt;dependency&gt;
    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;
    &lt;artifactId&gt;flink-runtime-web_2.11&lt;/artifactId&gt;
    &lt;version&gt;${flink.version}&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>And explicitly create a local execution environment with the required configuration:</p>

<pre><code class="java">import org.apache.flink.configuration.ConfigConstants;

Configuration config = new Configuration();
config.setBoolean(ConfigConstants.LOCAL_START_WEBSERVER, true);
StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment(config);
</code></pre>

<p>The Flink web interface should now be available under <a href="http://localhost:8081">http://localhost:8081</a> once you get your program running, and look somewhat like the images below. Remember to update the Maven project once you change the POM file, if you don’t have auto-import enabled in your IDE — this might lead to an error when you first try to access the web interface.</p>

<p><img src="/images/post/flink_web_interface.png" alt="flink_web_interface" /></p>

<p>Congratulations! You have just run your first Flink application in an IDE. A tutorial in the Flink documentation goes one step further and shows how to setup a local Flink cluster and submit a job just like submitting it to a remote cluster.</p>

<p>We encourage you to have a look through the Flink documentation for further support or more detailed information. If at any point you feel lost or have any questions: our community is very active on Stack Overflow, and you can also reach out to the developers using the Mailing List. The data Artisans Standard training goes through the training exercises in more detail, so if you would prefer to get some personal guidance, you can find more about future trainings and locations here. We are looking forward to your next adventures with Flink!flri</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flink Forward China 2018 Slides]]></title>
    <link href="http://untitled-life.github.io/blog/2018/12/23/flink-forward-china-2018-slides/"/>
    <updated>2018-12-23T11:06:47+08:00</updated>
    <id>http://untitled-life.github.io/blog/2018/12/23/flink-forward-china-2018-slides</id>
    <content type="html"><![CDATA[<blockquote><p>人生由淡淡的悲伤和淡淡的幸福组成，在小小的期待、偶尔的兴奋和沉默的失望中度过每一天，然后带着一种想说却又说不出来的‘懂’，作最后的转身离开。 &ndash;龙应台 《目送》</p></blockquote>

<!-- more -->


<h1>主会场</h1>

<ol>
<li>【主会场01-Craig Russell】Apache Flink: 践行 Apache 之道：<a href="https://files.alicdn.com/tpsservice/b40e46ca0abcef3e3f12f7fe12c46f0a.pdf">https://files.alicdn.com/tpsservice/b40e46ca0abcef3e3f12f7fe12c46f0a.pdf</a></li>
<li>【主会场02-周靖人】云上计算普惠科技：<a href="https://files.alicdn.com/tpsservice/9a90a15cc2666348aa7e2fef4846eea7.pdf">https://files.alicdn.com/tpsservice/9a90a15cc2666348aa7e2fef4846eea7.pdf</a></li>
<li>【主会场03-蒋晓伟】Apache Flink® - Redefining Computation：<a href="https://files.alicdn.com/tpsservice/62fa5ebcd23ea0b8a956f2a06197b57a.pdf">https://files.alicdn.com/tpsservice/62fa5ebcd23ea0b8a956f2a06197b57a.pdf</a></li>
<li>【主会场04-Stephan Ewen】Stream Processing takes on Everything：【Updating&hellip;】</li>
<li>【主会场05-闵万里】城市级实时计算的力量：<a href="https://files.alicdn.com/tpsservice/5f3272c3212b77cd835ff020d9954480.pdf">https://files.alicdn.com/tpsservice/5f3272c3212b77cd835ff020d9954480.pdf</a></li>
<li>【主会场06-罗李】滴滴实时计算平台架构与实践：<a href="https://files.alicdn.com/tpsservice/aca017af879a657ed0983b8f1cf4bbfd.pdf">https://files.alicdn.com/tpsservice/aca017af879a657ed0983b8f1cf4bbfd.pdf</a></li>
</ol>


<h1>分会场一</h1>

<ol>
<li>【分会场一01-钱正平】为并行图数据处理提供高层抽象／语言：<a href="https://files.alicdn.com/tpsservice/1f9799e34cd9ce22678b1ed13b71e615.pdf">https://files.alicdn.com/tpsservice/1f9799e34cd9ce22678b1ed13b71e615.pdf</a></li>
<li>【分会场一02-秦江杰 / 孙金城】Simplify Machine Learning With Flink TableAPI：<a href="https://files.alicdn.com/tpsservice/69181d1fd85d15635a7fe64ebafbf140.pdf">https://files.alicdn.com/tpsservice/69181d1fd85d15635a7fe64ebafbf140.pdf</a></li>
<li>【分会场一03-时金魁】Flink七武器及应用实战：<a href="https://files.alicdn.com/tpsservice/4346f13e6710d3faed35fa21976ce1cb.pdf">https://files.alicdn.com/tpsservice/4346f13e6710d3faed35fa21976ce1cb.pdf</a></li>
<li>【分会场一04-崔星灿】快速融入Apache Flink开源社区：<a href="https://files.alicdn.com/tpsservice/981cfe593809cc08c11c5f0cee4d19cd.pdf">https://files.alicdn.com/tpsservice/981cfe593809cc08c11c5f0cee4d19cd.pdf</a></li>
<li>【分会场一05-施晓罡 / 郑灿彬】基于Apache Flink的平台化构建及运维优化经验：<a href="https://files.alicdn.com/tpsservice/9bcc469feb3dcca4ea15226e70e23ed5.pdf">https://files.alicdn.com/tpsservice/9bcc469feb3dcca4ea15226e70e23ed5.pdf</a></li>
</ol>


<h1>分会场二</h1>

<ol>
<li>【分会场二01-Radu Tudoran】Real-Time AI in Huawei Cloud: Practicing with Streaming ML：<a href="https://files.alicdn.com/tpsservice/3d836d6366a800dc70f52a0ec0bb5bc5.pdf">https://files.alicdn.com/tpsservice/3d836d6366a800dc70f52a0ec0bb5bc5.pdf</a></li>
<li>【分会场二02-Konstantin Knauf】Apache Flink® 1.7 and Beyond：【Updating&hellip;】</li>
<li>【分会场二03-李峰】FLINK在大规模实时无效广告流量检测中的应用：<a href="https://files.alicdn.com/tpsservice/c429c9351675f89a56000489519135a8.pdf">https://files.alicdn.com/tpsservice/c429c9351675f89a56000489519135a8.pdf</a></li>
<li>【分会场二04-Piotr Nowojsk】Flink Streaming SQL 2018：【Updating&hellip;】</li>
<li>【分会场二05-孟文瑞 / 于淼】Uber 商业性能指标生成与管理：<a href="https://files.alicdn.com/tpsservice/9bf841f251392aedcbb7cc98c5d140fa.pdf">https://files.alicdn.com/tpsservice/9bf841f251392aedcbb7cc98c5d140fa.pdf</a></li>
<li>【分会场二06-戴资力】Apache Flink 流式应用中状态的数据结构定义升级：【Updating&hellip;】</li>
</ol>


<h1>分会场三</h1>

<ol>
<li>【分会场三01-邹丹】Flink在字节跳动的实践：<a href="https://files.alicdn.com/tpsservice/6b7686e18135389a76e2a0e476b270ec.pdf">https://files.alicdn.com/tpsservice/6b7686e18135389a76e2a0e476b270ec.pdf</a></li>
<li>【分会场三02-鞠⼤升】基于Flink的美团点评实时计算平台实践和应⽤：<a href="https://files.alicdn.com/tpsservice/d855dadbdeacb1d7bae82c2780a545b5.pdf">https://files.alicdn.com/tpsservice/d855dadbdeacb1d7bae82c2780a545b5.pdf</a></li>
<li>【分会场三03-杨克特 / 伍翀】基于streaming构建统一的数据处理引擎的挑战与实践：<a href="https://files.alicdn.com/tpsservice/74235d95df4b7b3163a96615e0b61131.pdf">https://files.alicdn.com/tpsservice/74235d95df4b7b3163a96615e0b61131.pdf</a></li>
<li>【分会场三05-李钰 / 唐云】Flink中的两类新型状态存储：<a href="https://files.alicdn.com/tpsservice/1df9ccb8a7b6b2782a558d3c32d40c19.pdf">https://files.alicdn.com/tpsservice/1df9ccb8a7b6b2782a558d3c32d40c19.pdf</a></li>
</ol>


<h1>分会场四</h1>

<ol>
<li>【分会场四01-王绍翾 / 章剑锋】Challenges and Opportunities of Apache Flink® Ecosystem：<a href="https://files.alicdn.com/tpsservice/6122ed352e520aae78a22ed19657d150.pdf">https://files.alicdn.com/tpsservice/6122ed352e520aae78a22ed19657d150.pdf</a></li>
<li>【分会场四02-翟佳 / 郭斯杰】使⽤Flink和Pulsar进⾏批流⼀体弹性计算：<a href="https://files.alicdn.com/tpsservice/36a600d88492560d8f33c86ce9e3f746.pdf">https://files.alicdn.com/tpsservice/36a600d88492560d8f33c86ce9e3f746.pdf</a></li>
<li>【分会场四03-滕昱】为流处理世界重新设计的存储：<a href="https://files.alicdn.com/tpsservice/8c72901db4a4bda83e33d35b8e6d0ecd.pdf">https://files.alicdn.com/tpsservice/8c72901db4a4bda83e33d35b8e6d0ecd.pdf</a></li>
<li>【分会场三04-杨旭】Alink：基于Apache Flink的算法平台：<a href="https://files.alicdn.com/tpsservice/23c67b6682c7d74339af7c53fccac429.pdf">https://files.alicdn.com/tpsservice/23c67b6682c7d74339af7c53fccac429.pdf</a></li>
<li>【分会场四06-徐骁】Apache Flink 和 Elasticsearch 助⼒实时 OLAP 平台：<a href="https://files.alicdn.com/tpsservice/44558decf0f39980283107647d1e5755.pdf">https://files.alicdn.com/tpsservice/44558decf0f39980283107647d1e5755.pdf</a></li>
</ol>


<h1>分会场五</h1>

<ol>
<li>【分会场五01-姜春宇】以标准推动开源技术在行业的落地：<a href="https://files.alicdn.com/tpsservice/13039399808974a7c40be0c5d671061e.pdf">https://files.alicdn.com/tpsservice/13039399808974a7c40be0c5d671061e.pdf</a></li>
<li>【分会场五03-陈华曦】基于Apache Flink的搜索处理平台：<a href="https://files.alicdn.com/tpsservice/8dab3c208f8044a26937a7bd7aed3c3d.pdf">https://files.alicdn.com/tpsservice/8dab3c208f8044a26937a7bd7aed3c3d.pdf</a></li>
<li>【分会场五05-倪春恩】Apache Kylin:大数据OLAP利器：<a href="https://files.alicdn.com/tpsservice/4a21d431d914e85b0edced063dbc40ff.pdf">https://files.alicdn.com/tpsservice/4a21d431d914e85b0edced063dbc40ff.pdf</a></li>
<li>【分会场五06-李剑】Flink在阿里巴巴电商业务中的应用：<a href="https://files.alicdn.com/tpsservice/badd0c8d32c9008d95addc0a28f1eb11.pdf">https://files.alicdn.com/tpsservice/badd0c8d32c9008d95addc0a28f1eb11.pdf</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
